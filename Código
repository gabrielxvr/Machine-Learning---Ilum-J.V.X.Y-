import pandas as pd

# Código para ler o arquivo em xls e retorná-lo em dataframe
dfbr = pd.read_excel("dados brasileirao.xlsx") 

# Nesta linha, foram retiradas todas as colunas que possuiam dados relativos à estáticas após o começo do jogo. Os Dados após o jogo começar não nos ajudam a prever os nossos resultados, pois são muito específicos de cada jogo. Então vamos analisar o principal: número de gols
dfbr = dfbr.drop(["escanteios_man", "escanteios_vis", "publico_max", "faltas_man", "faltas_vis", "chutes_bola_parada_man", "chutes_bola_parada_vis", "defesas_man", "defesas_vis", "impedimentos_man", "impedimentos_vis", "chutes_man", "chutes_vis", "chutes_fora_man", "chutes_fora_vis", "gols_1_tempo_man", "gols_1_tempo_vis"], axis=1)

# Nesta linha, foram tiradas todas as linhas que possuiam dados faltantes, visto que os anos iniciais não tinham todos os dados da tabela preenchidos.
dfbr = dfbr.dropna(axis = 0)

# Nesta linha, são redefinidos os índices para facilitar o trabalho com os dados e foi feito após retirar os dados que não íamos precisar.
dfbr = dfbr.reset_index()

# Nesta parte, foram retiradas as colunas "index" e "Unnamed: 0" para facilitar o trabalho com os dados (Eram colunas com repetição de índices antigos)
dfbr = dfbr.drop(columns=["index", "Unnamed: 0"])

# O código a seguir cria um dataframe contendo as faixas de público e as respectivas médias de gols associadas a elas
pub_max = dfbr["publico"].max()
pub_max_norm = pub_max/25
publico_gols = ["publico", "gols_man", "gols_vis"]
dfbr_publico_gols = dfbr[publico_gols]
lista_medias_publico = []
lista_medias_gols_publico = []

for i in range(25):
    n_menor = i*pub_max_norm
    n_maior = (i+1)*pub_max_norm
    dfbr_publico_gols_sep = dfbr_publico_gols.loc[(dfbr_publico_gols["publico"] >= n_menor) & (dfbr_publico_gols["publico"] < n_maior)]
    media_gols_publico_sep = dfbr_publico_gols_sep["gols_man"].mean()
    media_publico = (n_menor + n_maior)/2
    lista_medias_publico.append(media_publico)
    lista_medias_gols_publico.append(media_gols_publico_sep)
    
dic_publico_gols = {
    "publico_medio": lista_medias_publico,
    "gols_man": lista_medias_gols_publico,
}

dfpg = pd.DataFrame.from_dict(dic_publico_gols)

# O código a seguir cria um dataframe contendo as faixas de valor do clube mandante e as respectivas médias de gols do mandante associadas a elas
valor_max = dfbr["valor_equipe_titular_man"].max()
valor_max_norm = valor_max/10
valor_gols = ["valor_equipe_titular_man", "gols_man", "gols_vis"]
dfbr_valor_gols = dfbr[valor_gols]
lista_medias_valor = []
lista_medias_gols_valor = []

for i in range(10):
    n_menor = i*valor_max_norm
    n_maior = (i+1)*valor_max_norm
    dfbr_valor_gols_sep = dfbr_valor_gols.loc[(dfbr_valor_gols["valor_equipe_titular_man"] >= n_menor) & (dfbr_valor_gols["valor_equipe_titular_man"] < n_maior)]
    media_gols_valor_sep = dfbr_valor_gols_sep["gols_man"].mean()
    media_valor = (n_menor + n_maior)/2
    lista_medias_valor.append(media_valor)
    lista_medias_gols_valor.append(media_gols_valor_sep)
    
dic_valor_gols = {
    "valor_medio": lista_medias_valor,
    "gols_man": lista_medias_gols_valor,
}

dfvg = pd.DataFrame.from_dict(dic_valor_gols)

# O código a seguir cria um dataframe contendo as faixas de valor do clube mandante e as respectivas médias de gols do time visitante associadas a elas
valor_max = dfbr["valor_equipe_titular_man"].max()

valor_max_norm = valor_max/10

valor_gols = ["valor_equipe_titular_man", "gols_man", "gols_vis"]

dfbr_valor_gols = dfbr[valor_gols]

lista_medias_valor = []

lista_medias_gols_valor_vis = []

for i in range(10):
    n_menor = i*valor_max_norm
    n_maior = (i+1)*valor_max_norm
    
    dfbr_valor_gols_sep = dfbr_valor_gols.loc[(dfbr_valor_gols["valor_equipe_titular_man"] >= n_menor) & (dfbr_valor_gols["valor_equipe_titular_man"] < n_maior)]
    media_gols_valor_sep = dfbr_valor_gols_sep["gols_vis"].mean()
    media_valor = (n_menor + n_maior)/2
    lista_medias_valor.append(media_valor)
    lista_medias_gols_valor_vis.append(media_gols_valor_sep)
    
dic_valor_gols_vis = {
    "valor_medio_man": lista_medias_valor,
    "gols_vis": lista_medias_gols_valor_vis,
}

dfvgv = pd.DataFrame.from_dict(dic_valor_gols_vis)

# O código a seguir cria um dataframe contendo as colocações do clube mandante e as respectivas médias de gols do time mandante associadas a elas
colocacao_gols = ["colocacao_man", "gols_man", "gols_vis"]

dfbr_colocacao_gols = dfbr[colocacao_gols]

lista_colocacao = []

lista_medias_gols_colocacao = []

for i in range(20, 0, -1):
    
    dfbr_colocacao_gols_sep = dfbr_colocacao_gols.loc[(dfbr_colocacao_gols["colocacao_man"] == i)]
    media_gols_colocacao_sep = dfbr_colocacao_gols_sep["gols_man"].mean()
    lista_colocacao.append(i)
    lista_medias_gols_colocacao.append(media_gols_colocacao_sep)
    
dic_colocacao_gols = {
    "colocacao_man": lista_colocacao,
    "gols_man": lista_medias_gols_colocacao,
}

dfcg = pd.DataFrame.from_dict(dic_colocacao_gols)

# O código a seguir cria um dataframe contendo as colocações do clube mandante e as respectivas médias de gols do time visitante associadas a elas
colocacao_gols = ["colocacao_man", "gols_man", "gols_vis"]

dfbr_colocacao_gols = dfbr[colocacao_gols]

lista_colocacao = []

lista_medias_gols_colocacao_vis = []

for i in range(20, 0, -1):
    
    dfbr_colocacao_gols_sep = dfbr_colocacao_gols.loc[(dfbr_colocacao_gols["colocacao_man"] == i)]
    media_gols_colocacao_sep_vis = dfbr_colocacao_gols_sep["gols_vis"].mean()
    lista_colocacao.append(i)
    lista_medias_gols_colocacao_vis.append(media_gols_colocacao_sep_vis)
    
dic_colocacao_gols_vis = {
    "colocacao_man": lista_colocacao,
    "gols_vis": lista_medias_gols_colocacao_vis,
}

dfcgv = pd.DataFrame.from_dict(dic_colocacao_gols_vis)

import matplotlib.pyplot as plt
import seaborn as sns

# Nesta linha, são plotados os gráficos de média de gols em cada faixa de público

fig = plt.figure()
ax1 = fig.add_subplot(111)
dfpg.plot('publico_medio','gols_man',legend=True, ax=ax1, kind = 'scatter', color = 'red')
plt.title('Gols e Público Médio')
plt.xlabel('Público Médio')
plt.ylabel('Gols da Equipe Mandante')
#plt.savefig('Gols e Público.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, são plotados os gráficos de média de gols do mandante em cada faixa de valor do mandante

fig1 = plt.figure()
ax2 = fig1.add_subplot(111)
dfvg.plot('valor_medio','gols_man',legend=True, ax=ax2, kind = 'scatter', color = 'blue')
plt.title('Gols e Valor do Elenco')
plt.xlabel('Valor Médio do Elenco Mandante')
plt.ylabel('Gols da Equipe Mandante')
#plt.savefig('Gols e Valor do Elenco.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, são plotados os gráficos de média de gols do visitante em cada faixa de valor do mandante

fig2 = plt.figure()
ax3 = fig2.add_subplot(111)
dfvgv.plot('valor_medio_man','gols_vis',legend=True, ax=ax3, kind = 'scatter', color = 'purple')
plt.title('Gols do Visitante e Valor Médio do Elenco Mandante')
plt.xlabel('Valor Médio do Elenco Mandante')
plt.ylabel('Gols da Equipe Visitante')
#plt.savefig('Gols do Visitante e Valor do Elenco Mandante.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, são plotados os gráficos de média de gols do mandante em cada colocação do mandante

fig3 = plt.figure()
ax4 = fig3.add_subplot(111)
dfcg.plot('colocacao_man','gols_man',legend=True, ax=ax4, kind = 'scatter', color = 'orange')
plt.title('Gols e Colocação do Mandante')
plt.xlabel('Colocação do Mandante')
plt.ylabel('Gols da Equipe Mandante')
#plt.savefig('Gols e Colocação do Mandante.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, são plotados os gráficos de média de gols do visitante em cada colocação do mandante

fig4 = plt.figure()
ax5 = fig4.add_subplot(111)
dfcgv.plot('colocacao_man','gols_vis',legend=True, ax=ax5, kind = 'scatter', color = 'pink')
plt.title('Gols do Visitante e Colocação do Mandante')
plt.xlabel('Colocação do Mandante')
plt.ylabel('Gols da Equipe Visitante')
#plt.savefig('Gols do Visitante e Colocação do Mandante.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, foi plotado um histograma da quantidade de público nos jogos

fig5 = plt.figure()
ax6 = fig5.add_subplot(111)
dfbr['publico'].plot(legend=True, ax=ax6, kind = 'hist', color = 'red')
plt.title('Frequência de Público')
plt.xlabel('Público')
plt.ylabel('Frequência')
#plt.savefig('Frequência de Público.png', dpi=100, format='png', facecolor='white')
plt.show()

# Nesta linha, foi plotado um histograma do valor da equipe titular do mandante

fig6 = plt.figure()
ax7 = fig6.add_subplot(111)
dfbr["valor_equipe_titular_man"].plot(legend=True, ax=ax7, kind = 'hist', color = 'blue')
plt.title('Valor da Equipe Mandante')
plt.xlabel('Valor da Equipe Mandante')
plt.ylabel('Frequência')
#plt.savefig('Frequência de Valor da Equipe Mandante.png', dpi=100, format='png', facecolor='white')
plt.show()


# Nesta linha, foi plotado um histograma da colocação da equipe mandante.

fig7 = plt.figure()
ax8 = fig7.add_subplot(111)
dfbr["colocacao_man"].plot(legend=True, ax=ax8, kind = 'hist', color = 'yellow')
plt.title('Colocação da Equipe Mandante')
plt.xlabel('Colocação da Equipe Mandante')
plt.ylabel('Frequência')
#plt.savefig('Frequência da Colocação.png', dpi=100, format='png', facecolor='white')
plt.show()
